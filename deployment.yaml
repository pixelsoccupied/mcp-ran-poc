---
apiVersion: v1
kind: Namespace
metadata:
  name: mcp-poc
  labels:
    app: mcp-poc
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: talm-mcp-sa
  namespace: mcp-poc
  labels:
    app: mcp-app
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: talm-mcp-admin-binding
  labels:
    app: mcp-app
subjects:
- kind: ServiceAccount
  name: talm-mcp-sa
  namespace: mcp-poc
roleRef:
  kind: ClusterRole
  name: admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-app
  namespace: mcp-poc
  labels:
    app: mcp-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mcp-app
  template:
    metadata:
      labels:
        app: mcp-app
    spec:
      serviceAccountName: talm-mcp-sa
      containers:
      - name: postgresql-mcp
        image: quay.io/npathan/dev:mcp-talm-poc-dev
        imagePullPolicy: Always
        command: ["uv", "run", "python", "servers/ocloud-pg.py"]
        args: ["--transport", "streamable-http", "--port", "3000"]
        ports:
        - containerPort: 3000
          name: pg-mcp-port
        envFrom:
        - secretRef:
            name: mcp-secrets
      - name: talm-mcp
        image: quay.io/npathan/dev:mcp-talm-poc-dev
        imagePullPolicy: Always
        command: ["uv", "run", "python", "servers/talm.py"]
        args: ["--transport", "streamable-http", "--port", "3001"]
        ports:
        - containerPort: 3001
          name: talm-mcp-port
        envFrom:
        - secretRef:
            name: mcp-secrets
      - name: adk-web
        image: quay.io/npathan/dev:mcp-talm-poc-dev
        imagePullPolicy: Always
        command: ["sh", "-c"]
        args: ["cd clients && uv run adk web --host 0.0.0.0 --port 8000"]
        ports:
        - containerPort: 8000
          name: web-port
        env:
        - name: POSTGRES_MCP_URL
          value: "http://localhost:3000/mcp"
        - name: TALM_MCP_URL
          value: "http://localhost:3001/mcp"
        envFrom:
        - secretRef:
            name: mcp-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-app-service
  namespace: mcp-poc
  labels:
    app: mcp-app
spec:
  selector:
    app: mcp-app
  ports:
  - port: 8000
    targetPort: 8000
    name: web
  - port: 3000
    targetPort: 3000
    name: pg-mcp
  - port: 3001
    targetPort: 3001
    name: talm-mcp
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: mcp-app-route
  namespace: mcp-poc
  labels:
    app: mcp-app
spec:
  to:
    kind: Service
    name: mcp-app-service
  port:
    targetPort: web
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect